<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Joker 硬件分享</title><link>https://xfengyin.github.io</link><description>：荣耀存于心，而非留于形。</description><copyright>Joker 硬件分享</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://file.moyublog.com/d/file/2019-08-17/723f835159529825324742cdc94c8a49.jpg</url><title>avatar</title><link>https://xfengyin.github.io</link></image><lastBuildDate>Thu, 18 Jul 2024 16:21:47 +0000</lastBuildDate><managingEditor>Joker 硬件分享</managingEditor><ttl>60</ttl><webMaster>Joker 硬件分享</webMaster><item><title>.gitignore 忽略文件</title><link>https://xfengyin.github.io/post/.gitignore%20-hu-lve-wen-jian.html</link><description>![image](https://github.com/user-attachments/assets/39ba67d5-39fb-4657-ba43-2c77256854ab)&#13;
&#13;
在 Go 项目开发过程中，我们的项目目录下经常会出现一些不需要提交到代码仓库的文件，例如编译文件、日志文件、编辑器配置文件、系统生成的文件等。</description><guid isPermaLink="true">https://xfengyin.github.io/post/.gitignore%20-hu-lve-wen-jian.html</guid><pubDate>Wed, 17 Jul 2024 11:24:30 +0000</pubDate></item><item><title>电动两轮车</title><link>https://xfengyin.github.io/post/dian-dong-liang-lun-che.html</link><description># 电路模块分析&#13;
## BMS电压 采集&#13;
&#13;
![image](https://github.com/user-attachments/assets/3cd43f01-1ece-445c-8310-435e6633bad4)&#13;
&#13;
![image](https://github.com/user-attachments/assets/2b682d3e-6399-475e-9d07-56ff20ba1a25)&#13;
&#13;
![image](https://github.com/user-attachments/assets/eb728838-fccb-48e1-9435-5b2b86286b9c)&#13;
&#13;
![image](https://github.com/user-attachments/assets/4cac9b0c-538e-4171-8554-f2844fee5882)&#13;
&#13;
![image](https://github.com/user-attachments/assets/9da56dd1-03e7-4158-a12c-fc7b5064f6ab)&#13;
&#13;
![image](https://github.com/user-attachments/assets/c733b4f3-106c-45db-a961-00b9a88b006e)&#13;
&#13;
![image](https://github.com/user-attachments/assets/9b915c4e-fd98-4560-9042-31964e608808)&#13;
&#13;
![image](https://github.com/user-attachments/assets/d36c00dc-7f2f-4cb3-a31d-f49140248d0a)&#13;
。</description><guid isPermaLink="true">https://xfengyin.github.io/post/dian-dong-liang-lun-che.html</guid><pubDate>Wed, 17 Jul 2024 11:20:49 +0000</pubDate></item><item><title>ESP32-Micropython_</title><link>https://xfengyin.github.io/post/ESP32-Micropython_.html</link><description># ESP32嵌入式&#13;
&#13;
## ESP32 + OLED（SSD1309）&#13;
&#13;
### SSD1309使用 I2C 进行通信，使用 pin 脚为 SCL： Pin22 ， SDA：Pin21&#13;
&#13;
![image](https://github.com/user-attachments/assets/8b35b30d-a6da-4c4a-9fa2-30b9063f229a)&#13;
&#13;
```python&#13;
from machine import Pin, I2C&#13;
import ssd1306&#13;
&#13;
# ESP32 Pin assignment &#13;
i2c = I2C(0, scl=Pin(22), sda=Pin(21))&#13;
&#13;
oled_width = 128&#13;
oled_height = 64&#13;
oled = ssd1306.SSD1306_I2C(oled_width, oled_height, i2c)&#13;
&#13;
oled.text('Hello, Wokwi!', 10, 10)   &#13;
oled.show()&#13;
```&#13;
&#13;
## ESP32 + Ring Rainbow&#13;
&#13;
###  Neopixels 使用 neopixels 单线通信，使用 pin 脚为 DIN： Pin15 ， DOUT：NC&#13;
&#13;
![image](https://github.com/user-attachments/assets/e8a2524e-1665-46e2-bf8c-9978f1007cb5)&#13;
&#13;
```python&#13;
# NeoPixels Rainbow on MicroPython&#13;
# Wokwi Example https://wokwi.com/arduino/projects/305569065545499202&#13;
&#13;
from machine import Pin&#13;
from neopixel import NeoPixel&#13;
from time import sleep&#13;
&#13;
rainbow = [&#13;
  (126 , 1 , 0),(114 , 13 , 0),(102 , 25 , 0),(90 , 37 , 0),(78 , 49 , 0),(66 , 61 , 0),(54 , 73 , 0),(42 , 85 , 0),&#13;
  (30 , 97 , 0),(18 , 109 , 0),(6 , 121 , 0),(0 , 122 , 5),(0 , 110 , 17),(0 , 98 , 29),(0 , 86 , 41),(0 , 74 , 53),&#13;
  (0 , 62 , 65),(0 , 50 , 77),(0 , 38 , 89),(0 , 26 , 101),(0 , 14 , 113),(0 , 2 , 125),(9 , 0 , 118),(21 , 0 , 106),&#13;
  (33 , 0 , 94),(45 , 0 , 82),(57 , 0 , 70),(69 , 0 , 58),(81 , 0 , 46),(93 , 0 , 34),(105 , 0 , 22),(117 , 0 , 10)]&#13;
&#13;
pixels = NeoPixel(Pin(15), 16)&#13;
while True:&#13;
  rainbow = rainbow[-1:] + rainbow[:-1]&#13;
  for i in range(16):&#13;
    pixels[i] = rainbow[i]&#13;
  pixels.write()&#13;
  sleep(0.05)&#13;
```&#13;
&#13;
## ESP32 + RGB LED&#13;
&#13;
###  RGB LED，使用 pin 脚为 R： Pin16 ，G： Pin18，B： Pin20&#13;
&#13;
![image](https://github.com/user-attachments/assets/0850eea5-0377-40d3-a866-30e97caa41f4)&#13;
&#13;
```python&#13;
from machine  import Pin&#13;
import utime&#13;
&#13;
red = Pin(16, Pin.OUT)&#13;
green = Pin(18, Pin.OUT)&#13;
blue = Pin(20, Pin.OUT)&#13;
&#13;
while True:&#13;
  red.value(0)&#13;
  green.value(1)&#13;
  blue.value(1)&#13;
  utime.sleep(1)&#13;
  red.value(1)&#13;
  green.value(0)&#13;
  blue.value(1)&#13;
  utime.sleep(1)&#13;
  red.value(1)&#13;
  green.value(1)&#13;
  blue.value(0)&#13;
  utime.sleep(1)&#13;
```。</description><guid isPermaLink="true">https://xfengyin.github.io/post/ESP32-Micropython_.html</guid><pubDate>Wed, 17 Jul 2024 11:10:55 +0000</pubDate></item><item><title>QS03B 硬件及软件逻辑测试</title><link>https://xfengyin.github.io/post/QS03B%20-ying-jian-ji-ruan-jian-luo-ji-ce-shi.html</link><description># QS03B &#13;
# BMS锂电保护 （Battery）&#13;
![image](https://github.com/user-attachments/assets/9219c8e5-67fb-4320-9111-224664ebc441)&#13;
&#13;
## 过充电压保护及恢复   &#13;
过充电 保护电压 4.55V  恢复电压 4.35V&#13;
&#13;
使用模拟电芯，缓慢上调电芯电压至保护，再下调至解除保护， 记录保护值及恢复值；&#13;
抓取保护延时的话，从下上调+1V，直接触发，记录电压跟CO输入之间的间隔；&#13;
抓取恢复延时时，从保护电压直接下调1V，记录此时恢复电压跟CO输入的间隔。</description><guid isPermaLink="true">https://xfengyin.github.io/post/QS03B%20-ying-jian-ji-ruan-jian-luo-ji-ce-shi.html</guid><pubDate>Wed, 17 Jul 2024 06:52:55 +0000</pubDate></item><item><title>为什么MOS管的栅极要串接电阻？</title><link>https://xfengyin.github.io/post/wei-shen-me-MOS-guan-de-zha-ji-yao-chuan-jie-dian-zu-%EF%BC%9F.html</link><description>在开关电路、驱动电路中，MOS管的栅极经常会串联一个电阻。</description><guid isPermaLink="true">https://xfengyin.github.io/post/wei-shen-me-MOS-guan-de-zha-ji-yao-chuan-jie-dian-zu-%EF%BC%9F.html</guid><pubDate>Wed, 17 Jul 2024 02:17:20 +0000</pubDate></item><item><title>硬件测试--Battery</title><link>https://xfengyin.github.io/post/ying-jian-ce-shi---Battery.html</link><description># Battery 电性能测试&#13;
&#13;
    Battery产品支持PD、QC3.0、QC2.0、SCP、PPS、FCP、AFC、SUPERVOOC等快充协议，Battery模式可给3C类数码电子产品供电，Charger模式可进行容量存储。</description><guid isPermaLink="true">https://xfengyin.github.io/post/ying-jian-ce-shi---Battery.html</guid><pubDate>Sat, 13 Jul 2024 05:53:17 +0000</pubDate></item></channel></rss>